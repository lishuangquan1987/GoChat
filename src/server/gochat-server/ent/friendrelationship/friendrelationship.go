// Code generated by ent, DO NOT EDIT.

package friendrelationship

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the friendrelationship type in the database.
	Label = "friend_relationship"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserId holds the string denoting the userid field in the database.
	FieldUserId = "user_id"
	// FieldFriendId holds the string denoting the friendid field in the database.
	FieldFriendId = "friend_id"
	// Table holds the table name of the friendrelationship in the database.
	Table = "friend_relationships"
)

// Columns holds all SQL columns for friendrelationship fields.
var Columns = []string{
	FieldID,
	FieldUserId,
	FieldFriendId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UserIdValidator is a validator for the "userId" field. It is called by the builders before save.
	UserIdValidator func(string) error
	// FriendIdValidator is a validator for the "friendId" field. It is called by the builders before save.
	FriendIdValidator func(string) error
)

// OrderOption defines the ordering options for the FriendRelationship queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUserId orders the results by the userId field.
func ByUserId(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserId, opts...).ToFunc()
}

// ByFriendId orders the results by the friendId field.
func ByFriendId(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFriendId, opts...).ToFunc()
}
