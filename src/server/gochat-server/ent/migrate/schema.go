// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChatRecordsColumns holds the columns for the "chat_records" table.
	ChatRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "msg_id", Type: field.TypeString},
		{Name: "from_user_id", Type: field.TypeInt},
		{Name: "to_user_id", Type: field.TypeInt},
		{Name: "msg_type", Type: field.TypeInt},
		{Name: "is_group", Type: field.TypeBool, Default: false},
		{Name: "group_id", Type: field.TypeInt, Nullable: true},
		{Name: "create_time", Type: field.TypeTime},
	}
	// ChatRecordsTable holds the schema information for the "chat_records" table.
	ChatRecordsTable = &schema.Table{
		Name:       "chat_records",
		Columns:    ChatRecordsColumns,
		PrimaryKey: []*schema.Column{ChatRecordsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "chatrecord_msg_id",
				Unique:  true,
				Columns: []*schema.Column{ChatRecordsColumns[1]},
			},
			{
				Name:    "chatrecord_from_user_id_to_user_id",
				Unique:  false,
				Columns: []*schema.Column{ChatRecordsColumns[2], ChatRecordsColumns[3]},
			},
			{
				Name:    "chatrecord_to_user_id_create_time",
				Unique:  false,
				Columns: []*schema.Column{ChatRecordsColumns[3], ChatRecordsColumns[7]},
			},
			{
				Name:    "chatrecord_group_id_create_time",
				Unique:  false,
				Columns: []*schema.Column{ChatRecordsColumns[6], ChatRecordsColumns[7]},
			},
		},
	}
	// DoNotDisturbsColumns holds the columns for the "do_not_disturbs" table.
	DoNotDisturbsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "target_user_id", Type: field.TypeInt, Nullable: true},
		{Name: "target_group_id", Type: field.TypeInt, Nullable: true},
		{Name: "is_global", Type: field.TypeBool, Default: false},
		{Name: "start_time", Type: field.TypeTime, Nullable: true},
		{Name: "end_time", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// DoNotDisturbsTable holds the schema information for the "do_not_disturbs" table.
	DoNotDisturbsTable = &schema.Table{
		Name:       "do_not_disturbs",
		Columns:    DoNotDisturbsColumns,
		PrimaryKey: []*schema.Column{DoNotDisturbsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "donotdisturb_user_id",
				Unique:  false,
				Columns: []*schema.Column{DoNotDisturbsColumns[1]},
			},
			{
				Name:    "donotdisturb_user_id_target_user_id",
				Unique:  true,
				Columns: []*schema.Column{DoNotDisturbsColumns[1], DoNotDisturbsColumns[2]},
			},
			{
				Name:    "donotdisturb_user_id_target_group_id",
				Unique:  true,
				Columns: []*schema.Column{DoNotDisturbsColumns[1], DoNotDisturbsColumns[3]},
			},
			{
				Name:    "donotdisturb_user_id_is_global",
				Unique:  true,
				Columns: []*schema.Column{DoNotDisturbsColumns[1], DoNotDisturbsColumns[4]},
			},
		},
	}
	// FriendRelationshipsColumns holds the columns for the "friend_relationships" table.
	FriendRelationshipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "friend_id", Type: field.TypeInt},
	}
	// FriendRelationshipsTable holds the schema information for the "friend_relationships" table.
	FriendRelationshipsTable = &schema.Table{
		Name:       "friend_relationships",
		Columns:    FriendRelationshipsColumns,
		PrimaryKey: []*schema.Column{FriendRelationshipsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "friendrelationship_user_id",
				Unique:  false,
				Columns: []*schema.Column{FriendRelationshipsColumns[1]},
			},
			{
				Name:    "friendrelationship_user_id_friend_id",
				Unique:  true,
				Columns: []*schema.Column{FriendRelationshipsColumns[1], FriendRelationshipsColumns[2]},
			},
		},
	}
	// FriendRequestsColumns holds the columns for the "friend_requests" table.
	FriendRequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "from_user_id", Type: field.TypeInt},
		{Name: "to_user_id", Type: field.TypeInt},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeInt, Default: 0},
		{Name: "create_time", Type: field.TypeTime},
	}
	// FriendRequestsTable holds the schema information for the "friend_requests" table.
	FriendRequestsTable = &schema.Table{
		Name:       "friend_requests",
		Columns:    FriendRequestsColumns,
		PrimaryKey: []*schema.Column{FriendRequestsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "friendrequest_to_user_id_status",
				Unique:  false,
				Columns: []*schema.Column{FriendRequestsColumns[2], FriendRequestsColumns[4]},
			},
			{
				Name:    "friendrequest_from_user_id_to_user_id",
				Unique:  false,
				Columns: []*schema.Column{FriendRequestsColumns[1], FriendRequestsColumns[2]},
			},
		},
	}
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "group_id", Type: field.TypeString, Unique: true},
		{Name: "group_name", Type: field.TypeString},
		{Name: "owner_id", Type: field.TypeInt},
		{Name: "create_user_id", Type: field.TypeInt},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "members", Type: field.TypeJSON},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "group_group_id",
				Unique:  true,
				Columns: []*schema.Column{GroupsColumns[1]},
			},
			{
				Name:    "group_owner_id",
				Unique:  false,
				Columns: []*schema.Column{GroupsColumns[3]},
			},
			{
				Name:    "group_create_user_id",
				Unique:  false,
				Columns: []*schema.Column{GroupsColumns[4]},
			},
			{
				Name:    "group_create_time",
				Unique:  false,
				Columns: []*schema.Column{GroupsColumns[5]},
			},
		},
	}
	// GroupChatRecordsColumns holds the columns for the "group_chat_records" table.
	GroupChatRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "msg_id", Type: field.TypeString},
		{Name: "from_user_id", Type: field.TypeString},
		{Name: "group_id", Type: field.TypeString},
		{Name: "msg_type", Type: field.TypeString},
		{Name: "create_time", Type: field.TypeTime},
	}
	// GroupChatRecordsTable holds the schema information for the "group_chat_records" table.
	GroupChatRecordsTable = &schema.Table{
		Name:       "group_chat_records",
		Columns:    GroupChatRecordsColumns,
		PrimaryKey: []*schema.Column{GroupChatRecordsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "groupchatrecord_msg_id",
				Unique:  true,
				Columns: []*schema.Column{GroupChatRecordsColumns[1]},
			},
			{
				Name:    "groupchatrecord_group_id_create_time",
				Unique:  false,
				Columns: []*schema.Column{GroupChatRecordsColumns[3], GroupChatRecordsColumns[5]},
			},
		},
	}
	// ImageMessagesColumns holds the columns for the "image_messages" table.
	ImageMessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "msg_id", Type: field.TypeString},
		{Name: "image_url", Type: field.TypeString},
	}
	// ImageMessagesTable holds the schema information for the "image_messages" table.
	ImageMessagesTable = &schema.Table{
		Name:       "image_messages",
		Columns:    ImageMessagesColumns,
		PrimaryKey: []*schema.Column{ImageMessagesColumns[0]},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "msg_id", Type: field.TypeString, Unique: true},
		{Name: "msg_type", Type: field.TypeString},
		{Name: "content", Type: field.TypeString},
		{Name: "create_time", Type: field.TypeTime},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
	}
	// MessageStatusColumns holds the columns for the "message_status" table.
	MessageStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "msg_id", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "is_delivered", Type: field.TypeBool, Default: false},
		{Name: "is_read", Type: field.TypeBool, Default: false},
		{Name: "delivered_time", Type: field.TypeTime, Nullable: true},
		{Name: "read_time", Type: field.TypeTime, Nullable: true},
		{Name: "create_time", Type: field.TypeTime},
	}
	// MessageStatusTable holds the schema information for the "message_status" table.
	MessageStatusTable = &schema.Table{
		Name:       "message_status",
		Columns:    MessageStatusColumns,
		PrimaryKey: []*schema.Column{MessageStatusColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "messagestatus_msg_id_user_id",
				Unique:  true,
				Columns: []*schema.Column{MessageStatusColumns[1], MessageStatusColumns[2]},
			},
			{
				Name:    "messagestatus_user_id",
				Unique:  false,
				Columns: []*schema.Column{MessageStatusColumns[2]},
			},
		},
	}
	// TextMessagesColumns holds the columns for the "text_messages" table.
	TextMessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "msg_id", Type: field.TypeString},
		{Name: "text", Type: field.TypeString},
	}
	// TextMessagesTable holds the schema information for the "text_messages" table.
	TextMessagesTable = &schema.Table{
		Name:       "text_messages",
		Columns:    TextMessagesColumns,
		PrimaryKey: []*schema.Column{TextMessagesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "nickname", Type: field.TypeString},
		{Name: "sex", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_username",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[1]},
			},
		},
	}
	// VideoMessagesColumns holds the columns for the "video_messages" table.
	VideoMessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "msg_id", Type: field.TypeString},
		{Name: "video_url", Type: field.TypeString},
	}
	// VideoMessagesTable holds the schema information for the "video_messages" table.
	VideoMessagesTable = &schema.Table{
		Name:       "video_messages",
		Columns:    VideoMessagesColumns,
		PrimaryKey: []*schema.Column{VideoMessagesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChatRecordsTable,
		DoNotDisturbsTable,
		FriendRelationshipsTable,
		FriendRequestsTable,
		GroupsTable,
		GroupChatRecordsTable,
		ImageMessagesTable,
		MessagesTable,
		MessageStatusTable,
		TextMessagesTable,
		UsersTable,
		VideoMessagesTable,
	}
)

func init() {
}
