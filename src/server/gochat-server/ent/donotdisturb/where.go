// Code generated by ent, DO NOT EDIT.

package donotdisturb

import (
	"gochat_server/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLTE(FieldID, id))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldUserID, v))
}

// TargetUserID applies equality check predicate on the "target_user_id" field. It's identical to TargetUserIDEQ.
func TargetUserID(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldTargetUserID, v))
}

// TargetGroupID applies equality check predicate on the "target_group_id" field. It's identical to TargetGroupIDEQ.
func TargetGroupID(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldTargetGroupID, v))
}

// IsGlobal applies equality check predicate on the "is_global" field. It's identical to IsGlobalEQ.
func IsGlobal(v bool) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldIsGlobal, v))
}

// StartTime applies equality check predicate on the "start_time" field. It's identical to StartTimeEQ.
func StartTime(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldStartTime, v))
}

// EndTime applies equality check predicate on the "end_time" field. It's identical to EndTimeEQ.
func EndTime(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldEndTime, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldUpdatedAt, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLTE(FieldUserID, v))
}

// TargetUserIDEQ applies the EQ predicate on the "target_user_id" field.
func TargetUserIDEQ(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldTargetUserID, v))
}

// TargetUserIDNEQ applies the NEQ predicate on the "target_user_id" field.
func TargetUserIDNEQ(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNEQ(FieldTargetUserID, v))
}

// TargetUserIDIn applies the In predicate on the "target_user_id" field.
func TargetUserIDIn(vs ...int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIn(FieldTargetUserID, vs...))
}

// TargetUserIDNotIn applies the NotIn predicate on the "target_user_id" field.
func TargetUserIDNotIn(vs ...int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotIn(FieldTargetUserID, vs...))
}

// TargetUserIDGT applies the GT predicate on the "target_user_id" field.
func TargetUserIDGT(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGT(FieldTargetUserID, v))
}

// TargetUserIDGTE applies the GTE predicate on the "target_user_id" field.
func TargetUserIDGTE(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGTE(FieldTargetUserID, v))
}

// TargetUserIDLT applies the LT predicate on the "target_user_id" field.
func TargetUserIDLT(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLT(FieldTargetUserID, v))
}

// TargetUserIDLTE applies the LTE predicate on the "target_user_id" field.
func TargetUserIDLTE(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLTE(FieldTargetUserID, v))
}

// TargetUserIDIsNil applies the IsNil predicate on the "target_user_id" field.
func TargetUserIDIsNil() predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIsNull(FieldTargetUserID))
}

// TargetUserIDNotNil applies the NotNil predicate on the "target_user_id" field.
func TargetUserIDNotNil() predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotNull(FieldTargetUserID))
}

// TargetGroupIDEQ applies the EQ predicate on the "target_group_id" field.
func TargetGroupIDEQ(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldTargetGroupID, v))
}

// TargetGroupIDNEQ applies the NEQ predicate on the "target_group_id" field.
func TargetGroupIDNEQ(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNEQ(FieldTargetGroupID, v))
}

// TargetGroupIDIn applies the In predicate on the "target_group_id" field.
func TargetGroupIDIn(vs ...int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIn(FieldTargetGroupID, vs...))
}

// TargetGroupIDNotIn applies the NotIn predicate on the "target_group_id" field.
func TargetGroupIDNotIn(vs ...int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotIn(FieldTargetGroupID, vs...))
}

// TargetGroupIDGT applies the GT predicate on the "target_group_id" field.
func TargetGroupIDGT(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGT(FieldTargetGroupID, v))
}

// TargetGroupIDGTE applies the GTE predicate on the "target_group_id" field.
func TargetGroupIDGTE(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGTE(FieldTargetGroupID, v))
}

// TargetGroupIDLT applies the LT predicate on the "target_group_id" field.
func TargetGroupIDLT(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLT(FieldTargetGroupID, v))
}

// TargetGroupIDLTE applies the LTE predicate on the "target_group_id" field.
func TargetGroupIDLTE(v int) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLTE(FieldTargetGroupID, v))
}

// TargetGroupIDIsNil applies the IsNil predicate on the "target_group_id" field.
func TargetGroupIDIsNil() predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIsNull(FieldTargetGroupID))
}

// TargetGroupIDNotNil applies the NotNil predicate on the "target_group_id" field.
func TargetGroupIDNotNil() predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotNull(FieldTargetGroupID))
}

// IsGlobalEQ applies the EQ predicate on the "is_global" field.
func IsGlobalEQ(v bool) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldIsGlobal, v))
}

// IsGlobalNEQ applies the NEQ predicate on the "is_global" field.
func IsGlobalNEQ(v bool) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNEQ(FieldIsGlobal, v))
}

// StartTimeEQ applies the EQ predicate on the "start_time" field.
func StartTimeEQ(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldStartTime, v))
}

// StartTimeNEQ applies the NEQ predicate on the "start_time" field.
func StartTimeNEQ(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNEQ(FieldStartTime, v))
}

// StartTimeIn applies the In predicate on the "start_time" field.
func StartTimeIn(vs ...time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIn(FieldStartTime, vs...))
}

// StartTimeNotIn applies the NotIn predicate on the "start_time" field.
func StartTimeNotIn(vs ...time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotIn(FieldStartTime, vs...))
}

// StartTimeGT applies the GT predicate on the "start_time" field.
func StartTimeGT(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGT(FieldStartTime, v))
}

// StartTimeGTE applies the GTE predicate on the "start_time" field.
func StartTimeGTE(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGTE(FieldStartTime, v))
}

// StartTimeLT applies the LT predicate on the "start_time" field.
func StartTimeLT(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLT(FieldStartTime, v))
}

// StartTimeLTE applies the LTE predicate on the "start_time" field.
func StartTimeLTE(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLTE(FieldStartTime, v))
}

// StartTimeIsNil applies the IsNil predicate on the "start_time" field.
func StartTimeIsNil() predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIsNull(FieldStartTime))
}

// StartTimeNotNil applies the NotNil predicate on the "start_time" field.
func StartTimeNotNil() predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotNull(FieldStartTime))
}

// EndTimeEQ applies the EQ predicate on the "end_time" field.
func EndTimeEQ(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldEndTime, v))
}

// EndTimeNEQ applies the NEQ predicate on the "end_time" field.
func EndTimeNEQ(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNEQ(FieldEndTime, v))
}

// EndTimeIn applies the In predicate on the "end_time" field.
func EndTimeIn(vs ...time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIn(FieldEndTime, vs...))
}

// EndTimeNotIn applies the NotIn predicate on the "end_time" field.
func EndTimeNotIn(vs ...time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotIn(FieldEndTime, vs...))
}

// EndTimeGT applies the GT predicate on the "end_time" field.
func EndTimeGT(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGT(FieldEndTime, v))
}

// EndTimeGTE applies the GTE predicate on the "end_time" field.
func EndTimeGTE(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGTE(FieldEndTime, v))
}

// EndTimeLT applies the LT predicate on the "end_time" field.
func EndTimeLT(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLT(FieldEndTime, v))
}

// EndTimeLTE applies the LTE predicate on the "end_time" field.
func EndTimeLTE(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLTE(FieldEndTime, v))
}

// EndTimeIsNil applies the IsNil predicate on the "end_time" field.
func EndTimeIsNil() predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIsNull(FieldEndTime))
}

// EndTimeNotNil applies the NotNil predicate on the "end_time" field.
func EndTimeNotNil() predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotNull(FieldEndTime))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.DoNotDisturb) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.DoNotDisturb) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.DoNotDisturb) predicate.DoNotDisturb {
	return predicate.DoNotDisturb(sql.NotPredicates(p))
}
