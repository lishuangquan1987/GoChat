// Code generated by ent, DO NOT EDIT.

package imagemessage

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the imagemessage type in the database.
	Label = "image_message"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMsgId holds the string denoting the msgid field in the database.
	FieldMsgId = "msg_id"
	// FieldImageUrl holds the string denoting the imageurl field in the database.
	FieldImageUrl = "image_url"
	// Table holds the table name of the imagemessage in the database.
	Table = "image_messages"
)

// Columns holds all SQL columns for imagemessage fields.
var Columns = []string{
	FieldID,
	FieldMsgId,
	FieldImageUrl,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// MsgIdValidator is a validator for the "msgId" field. It is called by the builders before save.
	MsgIdValidator func(string) error
	// ImageUrlValidator is a validator for the "imageUrl" field. It is called by the builders before save.
	ImageUrlValidator func(string) error
)

// OrderOption defines the ordering options for the ImageMessage queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByMsgId orders the results by the msgId field.
func ByMsgId(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMsgId, opts...).ToFunc()
}

// ByImageUrl orders the results by the imageUrl field.
func ByImageUrl(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldImageUrl, opts...).ToFunc()
}
